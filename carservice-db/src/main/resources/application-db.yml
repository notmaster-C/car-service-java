pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

spring:
  application:
    name: carservice-db
  redis:
    database: 0
    port: 6379
#    host: 192.168.106.132
    host: 127.0.0.1
    password:
    timeout: 50000
    lettuce:
      pool:
        max-active: 200       # 连接池最大连接数（使用负值表示没有限制）
        max-idle: 10          # 连接池中的最大空闲连接
        max-wait: -1          # 连接池最大阻塞等待时间（使用负值表示没有限制）
        min-idle: 0           # 连接池中的最小空闲连接

  datasource:
    dynamic:
      primary: master #配置默认数据库,及没有注解指定时走的数据库
      #严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源
      strict: false
      datasource:
        master: # 数据源1配置
          url: jdbc:mysql://localhost:3306/car_service?serverTimezone=GMT%2B8&autoReconnect=false&useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=true
          username: root
          password: root
          driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      initial-size: 10  # 初始化连接池的连接数
      max-active: 100   # 连接池最大活跃连接数
      min-idle: 10      # 空闲链接保持数量
      # 配置获取连接等待超时的时间(单位：毫秒)
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 600000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      max-evictable-idle-time-millis: 900000
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle
      pool-prepared-statements: true
      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，
      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，
      # 可以把这个数值配置大一些，比如说100
      max-open-prepared-statements: 100
      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql
      validation-query: SELECT 1 FROM DUAL
      # 数据库超时时间设置为30秒
      validation-query-timeout: 3000
      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的
      test-on-borrow: true
      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用
      test-on-return: false
      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用
      test-while-idle: true
      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录
      aop-patterns: "org.click.carservice.*.web.*"
      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作
      keepAlive: true
      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########
      web-stat-filter:
        enabled: true                   # 启动 StatFilter
        url-pattern: /*                 # 过滤所有url
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" # 排除一些不必要的url
        session-stat-enable: true       # 开启session统计功能
        session-stat-max-count: 1000    # session的最大个数,默认100
      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########
      stat-view-servlet:
        enabled: true                   # 启用StatViewServlet
        url-pattern: /druid/*           # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html
        reset-enable: false             # 不允许清空统计数据,重新计算
        login-username: admin           # 配置监控页面访问用户
        login-password: 123456          # 配置监控页面访问密码
        allow:                          # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问
        deny:                           # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝

# MyBatis-plus配置
mybatis-plus:
  mapperLocations: classpath:mappers/*Mapper.xml
  type-aliases-package: org.click.carservice.db.domain
  type-handlers-package: org.click.carservice.db.handler
  configuration:
    map-underscore-to-camel-case: true
    call-setters-on-nulls: true
    #开启sql日志
    #      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    #关闭sql日志
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl


knife4j:
  enable: true
  openapi:
    title: Knife4j官方文档
    description: "`我是测试`,**你知道吗**
    # aaa"
    email: xiaoymin@foxmail.com
    concat: 八一菜刀
    url: https://docs.xiaominfo.com
    version: v4.0
    license: Apache 2.0
    license-url: https://stackoverflow.com/
    terms-of-service-url: https://stackoverflow.com/
    group:
      test1:
        group-name: 分组名称
        api-rule: package
        api-rule-resources:
          - org.click.carservice